{"ast":null,"code":"\"use strict\";\n\nexports.isLeapYear = isLeapYear;\nvar _index = require(\"./toDate.js\");\n\n/**\r\n * @name isLeapYear\r\n * @category Year Helpers\r\n * @summary Is the given date in the leap year?\r\n *\r\n * @description\r\n * Is the given date in the leap year?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n *\r\n * @returns The date is in the leap year\r\n *\r\n * @example\r\n * // Is 1 September 2012 in the leap year?\r\n * const result = isLeapYear(new Date(2012, 8, 1))\r\n * //=> true\r\n */\nfunction isLeapYear(date) {\n  const _date = (0, _index.toDate)(date);\n  const year = _date.getFullYear();\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}","map":{"version":3,"names":["exports","isLeapYear","_index","require","date","_date","toDate","year","getFullYear"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/isLeapYear.js"],"sourcesContent":["\"use strict\";\r\nexports.isLeapYear = isLeapYear;\r\nvar _index = require(\"./toDate.js\");\r\n\r\n/**\r\n * @name isLeapYear\r\n * @category Year Helpers\r\n * @summary Is the given date in the leap year?\r\n *\r\n * @description\r\n * Is the given date in the leap year?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n *\r\n * @returns The date is in the leap year\r\n *\r\n * @example\r\n * // Is 1 September 2012 in the leap year?\r\n * const result = isLeapYear(new Date(2012, 8, 1))\r\n * //=> true\r\n */\r\nfunction isLeapYear(date) {\r\n  const _date = (0, _index.toDate)(date);\r\n  const year = _date.getFullYear();\r\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,UAAU,GAAGA,UAAU;AAC/B,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,UAAUA,CAACG,IAAI,EAAE;EACxB,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAEH,MAAM,CAACI,MAAM,EAAEF,IAAI,CAAC;EACtC,MAAMG,IAAI,GAAGF,KAAK,CAACG,WAAW,CAAC,CAAC;EAChC,OAAOD,IAAI,GAAG,GAAG,KAAK,CAAC,IAAKA,IAAI,GAAG,CAAC,KAAK,CAAC,IAAIA,IAAI,GAAG,GAAG,KAAK,CAAE;AACjE","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}