{"ast":null,"code":"\"use strict\";\n\nexports.previousDay = previousDay;\nvar _index = require(\"./getDay.js\");\nvar _index2 = require(\"./subDays.js\");\n\n/**\r\n * @name previousDay\r\n * @category Weekday Helpers\r\n * @summary When is the previous day of the week?\r\n *\r\n * @description\r\n * When is the previous day of the week? 0-6 the day of the week, 0 represents Sunday.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n * @param day - The day of the week\r\n *\r\n * @returns The date is the previous day of week\r\n *\r\n * @example\r\n * // When is the previous Monday before Mar, 20, 2020?\r\n * const result = previousDay(new Date(2020, 2, 20), 1)\r\n * //=> Mon Mar 16 2020 00:00:00\r\n *\r\n * @example\r\n * // When is the previous Tuesday before Mar, 21, 2020?\r\n * const result = previousDay(new Date(2020, 2, 21), 2)\r\n * //=> Tue Mar 17 2020 00:00:00\r\n */\nfunction previousDay(date, day) {\n  let delta = (0, _index.getDay)(date) - day;\n  if (delta <= 0) delta += 7;\n  return (0, _index2.subDays)(date, delta);\n}","map":{"version":3,"names":["exports","previousDay","_index","require","_index2","date","day","delta","getDay","subDays"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/previousDay.js"],"sourcesContent":["\"use strict\";\r\nexports.previousDay = previousDay;\r\nvar _index = require(\"./getDay.js\");\r\nvar _index2 = require(\"./subDays.js\");\r\n\r\n/**\r\n * @name previousDay\r\n * @category Weekday Helpers\r\n * @summary When is the previous day of the week?\r\n *\r\n * @description\r\n * When is the previous day of the week? 0-6 the day of the week, 0 represents Sunday.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n * @param day - The day of the week\r\n *\r\n * @returns The date is the previous day of week\r\n *\r\n * @example\r\n * // When is the previous Monday before Mar, 20, 2020?\r\n * const result = previousDay(new Date(2020, 2, 20), 1)\r\n * //=> Mon Mar 16 2020 00:00:00\r\n *\r\n * @example\r\n * // When is the previous Tuesday before Mar, 21, 2020?\r\n * const result = previousDay(new Date(2020, 2, 21), 2)\r\n * //=> Tue Mar 17 2020 00:00:00\r\n */\r\nfunction previousDay(date, day) {\r\n  let delta = (0, _index.getDay)(date) - day;\r\n  if (delta <= 0) delta += 7;\r\n\r\n  return (0, _index2.subDays)(date, delta);\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,WAAW,GAAGA,WAAW;AACjC,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC;AACnC,IAAIC,OAAO,GAAGD,OAAO,CAAC,cAAc,CAAC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,WAAWA,CAACI,IAAI,EAAEC,GAAG,EAAE;EAC9B,IAAIC,KAAK,GAAG,CAAC,CAAC,EAAEL,MAAM,CAACM,MAAM,EAAEH,IAAI,CAAC,GAAGC,GAAG;EAC1C,IAAIC,KAAK,IAAI,CAAC,EAAEA,KAAK,IAAI,CAAC;EAE1B,OAAO,CAAC,CAAC,EAAEH,OAAO,CAACK,OAAO,EAAEJ,IAAI,EAAEE,KAAK,CAAC;AAC1C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}