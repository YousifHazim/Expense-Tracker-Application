{"ast":null,"code":"\"use strict\";\n\nexports.getWeekOfMonth = getWeekOfMonth;\nvar _index = require(\"./getDate.js\");\nvar _index2 = require(\"./getDay.js\");\nvar _index3 = require(\"./startOfMonth.js\");\nvar _index4 = require(\"./_lib/defaultOptions.js\");\n\n/**\r\n * The {@link getWeekOfMonth} function options.\r\n */\n\n/**\r\n * @name getWeekOfMonth\r\n * @category Week Helpers\r\n * @summary Get the week of the month of the given date.\r\n *\r\n * @description\r\n * Get the week of the month of the given date.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The given date\r\n * @param options - An object with options.\r\n *\r\n * @returns The week of month\r\n *\r\n * @example\r\n * // Which week of the month is 9 November 2017?\r\n * const result = getWeekOfMonth(new Date(2017, 10, 9))\r\n * //=> 2\r\n */\nfunction getWeekOfMonth(date, options) {\n  const defaultOptions = (0, _index4.getDefaultOptions)();\n  const weekStartsOn = options?.weekStartsOn ?? options?.locale?.options?.weekStartsOn ?? defaultOptions.weekStartsOn ?? defaultOptions.locale?.options?.weekStartsOn ?? 0;\n  const currentDayOfMonth = (0, _index.getDate)(date);\n  if (isNaN(currentDayOfMonth)) return NaN;\n  const startWeekDay = (0, _index2.getDay)((0, _index3.startOfMonth)(date));\n  let lastDayOfFirstWeek = weekStartsOn - startWeekDay;\n  if (lastDayOfFirstWeek <= 0) lastDayOfFirstWeek += 7;\n  const remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;\n  return Math.ceil(remainingDaysAfterFirstWeek / 7) + 1;\n}","map":{"version":3,"names":["exports","getWeekOfMonth","_index","require","_index2","_index3","_index4","date","options","defaultOptions","getDefaultOptions","weekStartsOn","locale","currentDayOfMonth","getDate","isNaN","NaN","startWeekDay","getDay","startOfMonth","lastDayOfFirstWeek","remainingDaysAfterFirstWeek","Math","ceil"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/getWeekOfMonth.js"],"sourcesContent":["\"use strict\";\r\nexports.getWeekOfMonth = getWeekOfMonth;\r\nvar _index = require(\"./getDate.js\");\r\nvar _index2 = require(\"./getDay.js\");\r\nvar _index3 = require(\"./startOfMonth.js\");\r\n\r\nvar _index4 = require(\"./_lib/defaultOptions.js\");\r\n\r\n/**\r\n * The {@link getWeekOfMonth} function options.\r\n */\r\n\r\n/**\r\n * @name getWeekOfMonth\r\n * @category Week Helpers\r\n * @summary Get the week of the month of the given date.\r\n *\r\n * @description\r\n * Get the week of the month of the given date.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The given date\r\n * @param options - An object with options.\r\n *\r\n * @returns The week of month\r\n *\r\n * @example\r\n * // Which week of the month is 9 November 2017?\r\n * const result = getWeekOfMonth(new Date(2017, 10, 9))\r\n * //=> 2\r\n */\r\nfunction getWeekOfMonth(date, options) {\r\n  const defaultOptions = (0, _index4.getDefaultOptions)();\r\n  const weekStartsOn =\r\n    options?.weekStartsOn ??\r\n    options?.locale?.options?.weekStartsOn ??\r\n    defaultOptions.weekStartsOn ??\r\n    defaultOptions.locale?.options?.weekStartsOn ??\r\n    0;\r\n\r\n  const currentDayOfMonth = (0, _index.getDate)(date);\r\n  if (isNaN(currentDayOfMonth)) return NaN;\r\n\r\n  const startWeekDay = (0, _index2.getDay)((0, _index3.startOfMonth)(date));\r\n\r\n  let lastDayOfFirstWeek = weekStartsOn - startWeekDay;\r\n  if (lastDayOfFirstWeek <= 0) lastDayOfFirstWeek += 7;\r\n\r\n  const remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;\r\n  return Math.ceil(remainingDaysAfterFirstWeek / 7) + 1;\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,cAAc,GAAGA,cAAc;AACvC,IAAIC,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC;AACpC,IAAIC,OAAO,GAAGD,OAAO,CAAC,aAAa,CAAC;AACpC,IAAIE,OAAO,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAE1C,IAAIG,OAAO,GAAGH,OAAO,CAAC,0BAA0B,CAAC;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,cAAcA,CAACM,IAAI,EAAEC,OAAO,EAAE;EACrC,MAAMC,cAAc,GAAG,CAAC,CAAC,EAAEH,OAAO,CAACI,iBAAiB,EAAE,CAAC;EACvD,MAAMC,YAAY,GAChBH,OAAO,EAAEG,YAAY,IACrBH,OAAO,EAAEI,MAAM,EAAEJ,OAAO,EAAEG,YAAY,IACtCF,cAAc,CAACE,YAAY,IAC3BF,cAAc,CAACG,MAAM,EAAEJ,OAAO,EAAEG,YAAY,IAC5C,CAAC;EAEH,MAAME,iBAAiB,GAAG,CAAC,CAAC,EAAEX,MAAM,CAACY,OAAO,EAAEP,IAAI,CAAC;EACnD,IAAIQ,KAAK,CAACF,iBAAiB,CAAC,EAAE,OAAOG,GAAG;EAExC,MAAMC,YAAY,GAAG,CAAC,CAAC,EAAEb,OAAO,CAACc,MAAM,EAAE,CAAC,CAAC,EAAEb,OAAO,CAACc,YAAY,EAAEZ,IAAI,CAAC,CAAC;EAEzE,IAAIa,kBAAkB,GAAGT,YAAY,GAAGM,YAAY;EACpD,IAAIG,kBAAkB,IAAI,CAAC,EAAEA,kBAAkB,IAAI,CAAC;EAEpD,MAAMC,2BAA2B,GAAGR,iBAAiB,GAAGO,kBAAkB;EAC1E,OAAOE,IAAI,CAACC,IAAI,CAACF,2BAA2B,GAAG,CAAC,CAAC,GAAG,CAAC;AACvD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}