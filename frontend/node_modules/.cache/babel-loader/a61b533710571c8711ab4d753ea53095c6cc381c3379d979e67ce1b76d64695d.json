{"ast":null,"code":"\"use strict\";\n\nexports.isSameWeek = isSameWeek;\nvar _index = require(\"./startOfWeek.js\");\n\n/**\r\n * The {@link isSameWeek} function options.\r\n */\n\n/**\r\n * @name isSameWeek\r\n * @category Week Helpers\r\n * @summary Are the given dates in the same week (and month and year)?\r\n *\r\n * @description\r\n * Are the given dates in the same week (and month and year)?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n * @param options - An object with options\r\n *\r\n * @returns The dates are in the same week (and month and year)\r\n *\r\n * @example\r\n * // Are 31 August 2014 and 4 September 2014 in the same week?\r\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\r\n * //=> true\r\n *\r\n * @example\r\n * // If week starts with Monday,\r\n * // are 31 August 2014 and 4 September 2014 in the same week?\r\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\r\n *   weekStartsOn: 1\r\n * })\r\n * //=> false\r\n *\r\n * @example\r\n * // Are 1 January 2014 and 1 January 2015 in the same week?\r\n * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\r\n * //=> false\r\n */\nfunction isSameWeek(dateLeft, dateRight, options) {\n  const dateLeftStartOfWeek = (0, _index.startOfWeek)(dateLeft, options);\n  const dateRightStartOfWeek = (0, _index.startOfWeek)(dateRight, options);\n  return +dateLeftStartOfWeek === +dateRightStartOfWeek;\n}","map":{"version":3,"names":["exports","isSameWeek","_index","require","dateLeft","dateRight","options","dateLeftStartOfWeek","startOfWeek","dateRightStartOfWeek"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/isSameWeek.js"],"sourcesContent":["\"use strict\";\r\nexports.isSameWeek = isSameWeek;\r\nvar _index = require(\"./startOfWeek.js\");\r\n\r\n/**\r\n * The {@link isSameWeek} function options.\r\n */\r\n\r\n/**\r\n * @name isSameWeek\r\n * @category Week Helpers\r\n * @summary Are the given dates in the same week (and month and year)?\r\n *\r\n * @description\r\n * Are the given dates in the same week (and month and year)?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n * @param options - An object with options\r\n *\r\n * @returns The dates are in the same week (and month and year)\r\n *\r\n * @example\r\n * // Are 31 August 2014 and 4 September 2014 in the same week?\r\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\r\n * //=> true\r\n *\r\n * @example\r\n * // If week starts with Monday,\r\n * // are 31 August 2014 and 4 September 2014 in the same week?\r\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\r\n *   weekStartsOn: 1\r\n * })\r\n * //=> false\r\n *\r\n * @example\r\n * // Are 1 January 2014 and 1 January 2015 in the same week?\r\n * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\r\n * //=> false\r\n */\r\nfunction isSameWeek(dateLeft, dateRight, options) {\r\n  const dateLeftStartOfWeek = (0, _index.startOfWeek)(dateLeft, options);\r\n  const dateRightStartOfWeek = (0, _index.startOfWeek)(dateRight, options);\r\n\r\n  return +dateLeftStartOfWeek === +dateRightStartOfWeek;\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,UAAU,GAAGA,UAAU;AAC/B,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,UAAUA,CAACG,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAE;EAChD,MAAMC,mBAAmB,GAAG,CAAC,CAAC,EAAEL,MAAM,CAACM,WAAW,EAAEJ,QAAQ,EAAEE,OAAO,CAAC;EACtE,MAAMG,oBAAoB,GAAG,CAAC,CAAC,EAAEP,MAAM,CAACM,WAAW,EAAEH,SAAS,EAAEC,OAAO,CAAC;EAExE,OAAO,CAACC,mBAAmB,KAAK,CAACE,oBAAoB;AACvD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}