{"ast":null,"code":"\"use strict\";\n\nexports.setISODay = setISODay;\nvar _index = require(\"./addDays.js\");\nvar _index2 = require(\"./getISODay.js\");\nvar _index3 = require(\"./toDate.js\");\n\n/**\r\n * @name setISODay\r\n * @category Weekday Helpers\r\n * @summary Set the day of the ISO week to the given date.\r\n *\r\n * @description\r\n * Set the day of the ISO week to the given date.\r\n * ISO week starts with Monday.\r\n * 7 is the index of Sunday, 1 is the index of Monday etc.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to be changed\r\n * @param day - The day of the ISO week of the new date\r\n *\r\n * @returns The new date with the day of the ISO week set\r\n *\r\n * @example\r\n * // Set Sunday to 1 September 2014:\r\n * const result = setISODay(new Date(2014, 8, 1), 7)\r\n * //=> Sun Sep 07 2014 00:00:00\r\n */\nfunction setISODay(date, day) {\n  const _date = (0, _index3.toDate)(date);\n  const currentDay = (0, _index2.getISODay)(_date);\n  const diff = day - currentDay;\n  return (0, _index.addDays)(_date, diff);\n}","map":{"version":3,"names":["exports","setISODay","_index","require","_index2","_index3","date","day","_date","toDate","currentDay","getISODay","diff","addDays"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/setISODay.js"],"sourcesContent":["\"use strict\";\r\nexports.setISODay = setISODay;\r\nvar _index = require(\"./addDays.js\");\r\nvar _index2 = require(\"./getISODay.js\");\r\nvar _index3 = require(\"./toDate.js\");\r\n\r\n/**\r\n * @name setISODay\r\n * @category Weekday Helpers\r\n * @summary Set the day of the ISO week to the given date.\r\n *\r\n * @description\r\n * Set the day of the ISO week to the given date.\r\n * ISO week starts with Monday.\r\n * 7 is the index of Sunday, 1 is the index of Monday etc.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to be changed\r\n * @param day - The day of the ISO week of the new date\r\n *\r\n * @returns The new date with the day of the ISO week set\r\n *\r\n * @example\r\n * // Set Sunday to 1 September 2014:\r\n * const result = setISODay(new Date(2014, 8, 1), 7)\r\n * //=> Sun Sep 07 2014 00:00:00\r\n */\r\nfunction setISODay(date, day) {\r\n  const _date = (0, _index3.toDate)(date);\r\n  const currentDay = (0, _index2.getISODay)(_date);\r\n  const diff = day - currentDay;\r\n  return (0, _index.addDays)(_date, diff);\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,SAAS,GAAGA,SAAS;AAC7B,IAAIC,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC;AACpC,IAAIC,OAAO,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACvC,IAAIE,OAAO,GAAGF,OAAO,CAAC,aAAa,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,SAASA,CAACK,IAAI,EAAEC,GAAG,EAAE;EAC5B,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAEH,OAAO,CAACI,MAAM,EAAEH,IAAI,CAAC;EACvC,MAAMI,UAAU,GAAG,CAAC,CAAC,EAAEN,OAAO,CAACO,SAAS,EAAEH,KAAK,CAAC;EAChD,MAAMI,IAAI,GAAGL,GAAG,GAAGG,UAAU;EAC7B,OAAO,CAAC,CAAC,EAAER,MAAM,CAACW,OAAO,EAAEL,KAAK,EAAEI,IAAI,CAAC;AACzC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}