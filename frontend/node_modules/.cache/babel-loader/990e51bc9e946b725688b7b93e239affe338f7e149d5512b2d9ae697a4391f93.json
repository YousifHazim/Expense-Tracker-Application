{"ast":null,"code":"\"use strict\";\n\nexports.isAfter = isAfter;\nvar _index = require(\"./toDate.js\");\n\n/**\r\n * @name isAfter\r\n * @category Common Helpers\r\n * @summary Is the first date after the second one?\r\n *\r\n * @description\r\n * Is the first date after the second one?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date that should be after the other one to return true\r\n * @param dateToCompare - The date to compare with\r\n *\r\n * @returns The first date is after the second date\r\n *\r\n * @example\r\n * // Is 10 July 1989 after 11 February 1987?\r\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\r\n * //=> true\r\n */\nfunction isAfter(date, dateToCompare) {\n  const _date = (0, _index.toDate)(date);\n  const _dateToCompare = (0, _index.toDate)(dateToCompare);\n  return _date.getTime() > _dateToCompare.getTime();\n}","map":{"version":3,"names":["exports","isAfter","_index","require","date","dateToCompare","_date","toDate","_dateToCompare","getTime"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/isAfter.js"],"sourcesContent":["\"use strict\";\r\nexports.isAfter = isAfter;\r\nvar _index = require(\"./toDate.js\");\r\n\r\n/**\r\n * @name isAfter\r\n * @category Common Helpers\r\n * @summary Is the first date after the second one?\r\n *\r\n * @description\r\n * Is the first date after the second one?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date that should be after the other one to return true\r\n * @param dateToCompare - The date to compare with\r\n *\r\n * @returns The first date is after the second date\r\n *\r\n * @example\r\n * // Is 10 July 1989 after 11 February 1987?\r\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\r\n * //=> true\r\n */\r\nfunction isAfter(date, dateToCompare) {\r\n  const _date = (0, _index.toDate)(date);\r\n  const _dateToCompare = (0, _index.toDate)(dateToCompare);\r\n  return _date.getTime() > _dateToCompare.getTime();\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,OAAO,GAAGA,OAAO;AACzB,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,OAAOA,CAACG,IAAI,EAAEC,aAAa,EAAE;EACpC,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAEJ,MAAM,CAACK,MAAM,EAAEH,IAAI,CAAC;EACtC,MAAMI,cAAc,GAAG,CAAC,CAAC,EAAEN,MAAM,CAACK,MAAM,EAAEF,aAAa,CAAC;EACxD,OAAOC,KAAK,CAACG,OAAO,CAAC,CAAC,GAAGD,cAAc,CAACC,OAAO,CAAC,CAAC;AACnD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}