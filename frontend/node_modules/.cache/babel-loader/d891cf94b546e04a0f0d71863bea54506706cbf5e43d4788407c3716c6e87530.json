{"ast":null,"code":"\"use strict\";\n\nexports.nextDay = nextDay;\nvar _index = require(\"./addDays.js\");\nvar _index2 = require(\"./getDay.js\");\n\n/**\r\n * @name nextDay\r\n * @category Weekday Helpers\r\n * @summary When is the next day of the week?\r\n *\r\n * @description\r\n * When is the next day of the week? 0-6 the day of the week, 0 represents Sunday.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n * @param day - day of the week\r\n *\r\n * @returns The date is the next day of week\r\n *\r\n * @example\r\n * // When is the next Monday after Mar, 20, 2020?\r\n * const result = nextDay(new Date(2020, 2, 20), 1)\r\n * //=> Mon Mar 23 2020 00:00:00\r\n *\r\n * @example\r\n * // When is the next Tuesday after Mar, 21, 2020?\r\n * const result = nextDay(new Date(2020, 2, 21), 2)\r\n * //=> Tue Mar 24 2020 00:00:00\r\n */\nfunction nextDay(date, day) {\n  let delta = day - (0, _index2.getDay)(date);\n  if (delta <= 0) delta += 7;\n  return (0, _index.addDays)(date, delta);\n}","map":{"version":3,"names":["exports","nextDay","_index","require","_index2","date","day","delta","getDay","addDays"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/nextDay.js"],"sourcesContent":["\"use strict\";\r\nexports.nextDay = nextDay;\r\nvar _index = require(\"./addDays.js\");\r\nvar _index2 = require(\"./getDay.js\");\r\n\r\n/**\r\n * @name nextDay\r\n * @category Weekday Helpers\r\n * @summary When is the next day of the week?\r\n *\r\n * @description\r\n * When is the next day of the week? 0-6 the day of the week, 0 represents Sunday.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n * @param day - day of the week\r\n *\r\n * @returns The date is the next day of week\r\n *\r\n * @example\r\n * // When is the next Monday after Mar, 20, 2020?\r\n * const result = nextDay(new Date(2020, 2, 20), 1)\r\n * //=> Mon Mar 23 2020 00:00:00\r\n *\r\n * @example\r\n * // When is the next Tuesday after Mar, 21, 2020?\r\n * const result = nextDay(new Date(2020, 2, 21), 2)\r\n * //=> Tue Mar 24 2020 00:00:00\r\n */\r\nfunction nextDay(date, day) {\r\n  let delta = day - (0, _index2.getDay)(date);\r\n  if (delta <= 0) delta += 7;\r\n\r\n  return (0, _index.addDays)(date, delta);\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,OAAO,GAAGA,OAAO;AACzB,IAAIC,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC;AACpC,IAAIC,OAAO,GAAGD,OAAO,CAAC,aAAa,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,OAAOA,CAACI,IAAI,EAAEC,GAAG,EAAE;EAC1B,IAAIC,KAAK,GAAGD,GAAG,GAAG,CAAC,CAAC,EAAEF,OAAO,CAACI,MAAM,EAAEH,IAAI,CAAC;EAC3C,IAAIE,KAAK,IAAI,CAAC,EAAEA,KAAK,IAAI,CAAC;EAE1B,OAAO,CAAC,CAAC,EAAEL,MAAM,CAACO,OAAO,EAAEJ,IAAI,EAAEE,KAAK,CAAC;AACzC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}