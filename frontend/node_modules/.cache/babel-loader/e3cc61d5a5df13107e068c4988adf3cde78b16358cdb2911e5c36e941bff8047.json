{"ast":null,"code":"\"use strict\";\n\nexports.isSameQuarter = isSameQuarter;\nvar _index = require(\"./startOfQuarter.js\");\n\n/**\r\n * @name isSameQuarter\r\n * @category Quarter Helpers\r\n * @summary Are the given dates in the same quarter (and year)?\r\n *\r\n * @description\r\n * Are the given dates in the same quarter (and year)?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n\r\n * @returns The dates are in the same quarter (and year)\r\n *\r\n * @example\r\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\r\n * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 1 January 2014 and 1 January 2015 in the same quarter?\r\n * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2015, 0, 1))\r\n * //=> false\r\n */\nfunction isSameQuarter(dateLeft, dateRight) {\n  const dateLeftStartOfQuarter = (0, _index.startOfQuarter)(dateLeft);\n  const dateRightStartOfQuarter = (0, _index.startOfQuarter)(dateRight);\n  return +dateLeftStartOfQuarter === +dateRightStartOfQuarter;\n}","map":{"version":3,"names":["exports","isSameQuarter","_index","require","dateLeft","dateRight","dateLeftStartOfQuarter","startOfQuarter","dateRightStartOfQuarter"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/isSameQuarter.js"],"sourcesContent":["\"use strict\";\r\nexports.isSameQuarter = isSameQuarter;\r\nvar _index = require(\"./startOfQuarter.js\");\r\n\r\n/**\r\n * @name isSameQuarter\r\n * @category Quarter Helpers\r\n * @summary Are the given dates in the same quarter (and year)?\r\n *\r\n * @description\r\n * Are the given dates in the same quarter (and year)?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n\r\n * @returns The dates are in the same quarter (and year)\r\n *\r\n * @example\r\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\r\n * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 1 January 2014 and 1 January 2015 in the same quarter?\r\n * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2015, 0, 1))\r\n * //=> false\r\n */\r\nfunction isSameQuarter(dateLeft, dateRight) {\r\n  const dateLeftStartOfQuarter = (0, _index.startOfQuarter)(dateLeft);\r\n  const dateRightStartOfQuarter = (0, _index.startOfQuarter)(dateRight);\r\n\r\n  return +dateLeftStartOfQuarter === +dateRightStartOfQuarter;\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,aAAa,GAAGA,aAAa;AACrC,IAAIC,MAAM,GAAGC,OAAO,CAAC,qBAAqB,CAAC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,aAAaA,CAACG,QAAQ,EAAEC,SAAS,EAAE;EAC1C,MAAMC,sBAAsB,GAAG,CAAC,CAAC,EAAEJ,MAAM,CAACK,cAAc,EAAEH,QAAQ,CAAC;EACnE,MAAMI,uBAAuB,GAAG,CAAC,CAAC,EAAEN,MAAM,CAACK,cAAc,EAAEF,SAAS,CAAC;EAErE,OAAO,CAACC,sBAAsB,KAAK,CAACE,uBAAuB;AAC7D","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}