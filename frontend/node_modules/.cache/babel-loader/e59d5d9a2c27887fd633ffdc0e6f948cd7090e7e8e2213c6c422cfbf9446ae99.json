{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"C:/Users/mh_sm/Dropbox/PC/Desktop/computer/SENIOR-1/Spring/SW/Project/EXPENSE-TRACKER/frontend/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nexports.StandAloneQuarterParser = void 0;\nvar _Parser = require(\"../Parser.js\");\nvar _utils = require(\"../utils.js\");\nclass StandAloneQuarterParser extends _Parser.Parser {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"priority\", 120);\n    _defineProperty(this, \"incompatibleTokens\", [\"Y\", \"R\", \"Q\", \"M\", \"L\", \"w\", \"I\", \"d\", \"D\", \"i\", \"e\", \"c\", \"t\", \"T\"]);\n  }\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\":\n        // 01, 02, 03, 04\n        return (0, _utils.parseNDigits)(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, {\n          unit: \"quarter\"\n        });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return match.quarter(dateString, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        }) || match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return match.quarter(dateString, {\n          width: \"wide\",\n          context: \"standalone\"\n        }) || match.quarter(dateString, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        }) || match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n    }\n  }\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\nexports.StandAloneQuarterParser = StandAloneQuarterParser;","map":{"version":3,"names":["_defineProperty","require","default","exports","StandAloneQuarterParser","_Parser","_utils","Parser","constructor","arguments","parse","dateString","token","match","parseNDigits","length","ordinalNumber","unit","quarter","width","context","validate","_date","value","set","date","_flags","setMonth","setHours"],"sources":["C:/Users/mh_sm/Dropbox/PC/Desktop/computer/SENIOR-1/Spring/SW/Project/EXPENSE-TRACKER/frontend/node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.js"],"sourcesContent":["\"use strict\";\nexports.StandAloneQuarterParser = void 0;\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nclass StandAloneQuarterParser extends _Parser.Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return (0, _utils.parseNDigits)(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\nexports.StandAloneQuarterParser = StandAloneQuarterParser;\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,eAAA,GAAAC,OAAA,yJAAAC,OAAA;AACbC,OAAO,CAACC,uBAAuB,GAAG,KAAK,CAAC;AACxC,IAAIC,OAAO,GAAGJ,OAAO,CAAC,cAAc,CAAC;AAErC,IAAIK,MAAM,GAAGL,OAAO,CAAC,aAAa,CAAC;AAEnC,MAAMG,uBAAuB,SAASC,OAAO,CAACE,MAAM,CAAC;EAAAC,YAAA;IAAA,SAAAC,SAAA;IAAAT,eAAA,mBACxC,GAAG;IAAAA,eAAA,6BA4DO,CACnB,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ;EAAA;EAzEDU,KAAKA,CAACC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC9B,QAAQD,KAAK;MACX;MACA,KAAK,GAAG;MACR,KAAK,IAAI;QAAE;QACT,OAAO,CAAC,CAAC,EAAEN,MAAM,CAACQ,YAAY,EAAEF,KAAK,CAACG,MAAM,EAAEJ,UAAU,CAAC;MAC3D;MACA,KAAK,IAAI;QACP,OAAOE,KAAK,CAACG,aAAa,CAACL,UAAU,EAAE;UAAEM,IAAI,EAAE;QAAU,CAAC,CAAC;MAC7D;MACA,KAAK,KAAK;QACR,OACEJ,KAAK,CAACK,OAAO,CAACP,UAAU,EAAE;UACxBQ,KAAK,EAAE,aAAa;UACpBC,OAAO,EAAE;QACX,CAAC,CAAC,IACFP,KAAK,CAACK,OAAO,CAACP,UAAU,EAAE;UACxBQ,KAAK,EAAE,QAAQ;UACfC,OAAO,EAAE;QACX,CAAC,CAAC;;MAGN;MACA,KAAK,OAAO;QACV,OAAOP,KAAK,CAACK,OAAO,CAACP,UAAU,EAAE;UAC/BQ,KAAK,EAAE,QAAQ;UACfC,OAAO,EAAE;QACX,CAAC,CAAC;MACJ;MACA,KAAK,MAAM;MACX;QACE,OACEP,KAAK,CAACK,OAAO,CAACP,UAAU,EAAE;UACxBQ,KAAK,EAAE,MAAM;UACbC,OAAO,EAAE;QACX,CAAC,CAAC,IACFP,KAAK,CAACK,OAAO,CAACP,UAAU,EAAE;UACxBQ,KAAK,EAAE,aAAa;UACpBC,OAAO,EAAE;QACX,CAAC,CAAC,IACFP,KAAK,CAACK,OAAO,CAACP,UAAU,EAAE;UACxBQ,KAAK,EAAE,QAAQ;UACfC,OAAO,EAAE;QACX,CAAC,CAAC;IAER;EACF;EAEAC,QAAQA,CAACC,KAAK,EAAEC,KAAK,EAAE;IACrB,OAAOA,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,CAAC;EACjC;EAEAC,GAAGA,CAACC,IAAI,EAAEC,MAAM,EAAEH,KAAK,EAAE;IACvBE,IAAI,CAACE,QAAQ,CAAC,CAACJ,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjCE,IAAI,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACzB,OAAOH,IAAI;EACb;AAkBF;AACAtB,OAAO,CAACC,uBAAuB,GAAGA,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}