{"ast":null,"code":"\"use strict\";\n\nexports.isFuture = isFuture;\nvar _index = require(\"./toDate.js\");\n\n/**\r\n * @name isFuture\r\n * @category Common Helpers\r\n * @summary Is the given date in the future?\r\n * @pure false\r\n *\r\n * @description\r\n * Is the given date in the future?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n *\r\n * @returns The date is in the future\r\n *\r\n * @example\r\n * // If today is 6 October 2014, is 31 December 2014 in the future?\r\n * const result = isFuture(new Date(2014, 11, 31))\r\n * //=> true\r\n */\nfunction isFuture(date) {\n  return +(0, _index.toDate)(date) > Date.now();\n}","map":{"version":3,"names":["exports","isFuture","_index","require","date","toDate","Date","now"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/isFuture.js"],"sourcesContent":["\"use strict\";\r\nexports.isFuture = isFuture;\r\nvar _index = require(\"./toDate.js\");\r\n\r\n/**\r\n * @name isFuture\r\n * @category Common Helpers\r\n * @summary Is the given date in the future?\r\n * @pure false\r\n *\r\n * @description\r\n * Is the given date in the future?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n *\r\n * @returns The date is in the future\r\n *\r\n * @example\r\n * // If today is 6 October 2014, is 31 December 2014 in the future?\r\n * const result = isFuture(new Date(2014, 11, 31))\r\n * //=> true\r\n */\r\nfunction isFuture(date) {\r\n  return +(0, _index.toDate)(date) > Date.now();\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,QAAQ,GAAGA,QAAQ;AAC3B,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,QAAQA,CAACG,IAAI,EAAE;EACtB,OAAO,CAAC,CAAC,CAAC,EAAEF,MAAM,CAACG,MAAM,EAAED,IAAI,CAAC,GAAGE,IAAI,CAACC,GAAG,CAAC,CAAC;AAC/C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}