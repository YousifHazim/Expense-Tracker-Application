{"ast":null,"code":"\"use strict\";\n\nexports.startOfYear = startOfYear;\nvar _index = require(\"./toDate.js\");\nvar _index2 = require(\"./constructFrom.js\");\n\n/**\r\n * @name startOfYear\r\n * @category Year Helpers\r\n * @summary Return the start of a year for the given date.\r\n *\r\n * @description\r\n * Return the start of a year for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The original date\r\n *\r\n * @returns The start of a year\r\n *\r\n * @example\r\n * // The start of a year for 2 September 2014 11:55:00:\r\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\r\n * //=> Wed Jan 01 2014 00:00:00\r\n */\nfunction startOfYear(date) {\n  const cleanDate = (0, _index.toDate)(date);\n  const _date = (0, _index2.constructFrom)(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}","map":{"version":3,"names":["exports","startOfYear","_index","require","_index2","date","cleanDate","toDate","_date","constructFrom","setFullYear","getFullYear","setHours"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/startOfYear.js"],"sourcesContent":["\"use strict\";\r\nexports.startOfYear = startOfYear;\r\nvar _index = require(\"./toDate.js\");\r\nvar _index2 = require(\"./constructFrom.js\");\r\n\r\n/**\r\n * @name startOfYear\r\n * @category Year Helpers\r\n * @summary Return the start of a year for the given date.\r\n *\r\n * @description\r\n * Return the start of a year for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The original date\r\n *\r\n * @returns The start of a year\r\n *\r\n * @example\r\n * // The start of a year for 2 September 2014 11:55:00:\r\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\r\n * //=> Wed Jan 01 2014 00:00:00\r\n */\r\nfunction startOfYear(date) {\r\n  const cleanDate = (0, _index.toDate)(date);\r\n  const _date = (0, _index2.constructFrom)(date, 0);\r\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\r\n  _date.setHours(0, 0, 0, 0);\r\n  return _date;\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,WAAW,GAAGA,WAAW;AACjC,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC;AACnC,IAAIC,OAAO,GAAGD,OAAO,CAAC,oBAAoB,CAAC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,WAAWA,CAACI,IAAI,EAAE;EACzB,MAAMC,SAAS,GAAG,CAAC,CAAC,EAAEJ,MAAM,CAACK,MAAM,EAAEF,IAAI,CAAC;EAC1C,MAAMG,KAAK,GAAG,CAAC,CAAC,EAAEJ,OAAO,CAACK,aAAa,EAAEJ,IAAI,EAAE,CAAC,CAAC;EACjDG,KAAK,CAACE,WAAW,CAACJ,SAAS,CAACK,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAChDH,KAAK,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,OAAOJ,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}