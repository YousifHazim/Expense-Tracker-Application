{"ast":null,"code":"\"use strict\";\n\nexports.differenceInISOWeekYears = differenceInISOWeekYears;\nvar _index = require(\"./compareAsc.js\");\nvar _index2 = require(\"./differenceInCalendarISOWeekYears.js\");\nvar _index3 = require(\"./subISOWeekYears.js\");\nvar _index4 = require(\"./toDate.js\");\n\n/**\r\n * @name differenceInISOWeekYears\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Get the number of full ISO week-numbering years between the given dates.\r\n *\r\n * @description\r\n * Get the number of full ISO week-numbering years between the given dates.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The later date\r\n * @param dateRight - The earlier date\r\n *\r\n * @returns The number of full ISO week-numbering years\r\n *\r\n * @example\r\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\r\n * const result = differenceInISOWeekYears(\r\n *   new Date(2012, 0, 1),\r\n *   new Date(2010, 0, 1)\r\n * )\r\n * //=> 1\r\n */\nfunction differenceInISOWeekYears(dateLeft, dateRight) {\n  let _dateLeft = (0, _index4.toDate)(dateLeft);\n  const _dateRight = (0, _index4.toDate)(dateRight);\n  const sign = (0, _index.compareAsc)(_dateLeft, _dateRight);\n  const difference = Math.abs((0, _index2.differenceInCalendarISOWeekYears)(_dateLeft, _dateRight));\n  _dateLeft = (0, _index3.subISOWeekYears)(_dateLeft, sign * difference);\n\n  // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastISOWeekYearNotFull = Number((0, _index.compareAsc)(_dateLeft, _dateRight) === -sign);\n  const result = sign * (difference - isLastISOWeekYearNotFull);\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}","map":{"version":3,"names":["exports","differenceInISOWeekYears","_index","require","_index2","_index3","_index4","dateLeft","dateRight","_dateLeft","toDate","_dateRight","sign","compareAsc","difference","Math","abs","differenceInCalendarISOWeekYears","subISOWeekYears","isLastISOWeekYearNotFull","Number","result"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/differenceInISOWeekYears.js"],"sourcesContent":["\"use strict\";\r\nexports.differenceInISOWeekYears = differenceInISOWeekYears;\r\nvar _index = require(\"./compareAsc.js\");\r\nvar _index2 = require(\"./differenceInCalendarISOWeekYears.js\");\r\nvar _index3 = require(\"./subISOWeekYears.js\");\r\nvar _index4 = require(\"./toDate.js\");\r\n\r\n/**\r\n * @name differenceInISOWeekYears\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Get the number of full ISO week-numbering years between the given dates.\r\n *\r\n * @description\r\n * Get the number of full ISO week-numbering years between the given dates.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The later date\r\n * @param dateRight - The earlier date\r\n *\r\n * @returns The number of full ISO week-numbering years\r\n *\r\n * @example\r\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\r\n * const result = differenceInISOWeekYears(\r\n *   new Date(2012, 0, 1),\r\n *   new Date(2010, 0, 1)\r\n * )\r\n * //=> 1\r\n */\r\nfunction differenceInISOWeekYears(dateLeft, dateRight) {\r\n  let _dateLeft = (0, _index4.toDate)(dateLeft);\r\n  const _dateRight = (0, _index4.toDate)(dateRight);\r\n\r\n  const sign = (0, _index.compareAsc)(_dateLeft, _dateRight);\r\n  const difference = Math.abs(\r\n    (0, _index2.differenceInCalendarISOWeekYears)(_dateLeft, _dateRight),\r\n  );\r\n  _dateLeft = (0, _index3.subISOWeekYears)(_dateLeft, sign * difference);\r\n\r\n  // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\r\n  // if last calendar ISO year is not full\r\n  // If so, result must be decreased by 1 in absolute value\r\n  const isLastISOWeekYearNotFull = Number(\r\n    (0, _index.compareAsc)(_dateLeft, _dateRight) === -sign,\r\n  );\r\n  const result = sign * (difference - isLastISOWeekYearNotFull);\r\n  // Prevent negative zero\r\n  return result === 0 ? 0 : result;\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,wBAAwB,GAAGA,wBAAwB;AAC3D,IAAIC,MAAM,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AACvC,IAAIC,OAAO,GAAGD,OAAO,CAAC,uCAAuC,CAAC;AAC9D,IAAIE,OAAO,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAC7C,IAAIG,OAAO,GAAGH,OAAO,CAAC,aAAa,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,wBAAwBA,CAACM,QAAQ,EAAEC,SAAS,EAAE;EACrD,IAAIC,SAAS,GAAG,CAAC,CAAC,EAAEH,OAAO,CAACI,MAAM,EAAEH,QAAQ,CAAC;EAC7C,MAAMI,UAAU,GAAG,CAAC,CAAC,EAAEL,OAAO,CAACI,MAAM,EAAEF,SAAS,CAAC;EAEjD,MAAMI,IAAI,GAAG,CAAC,CAAC,EAAEV,MAAM,CAACW,UAAU,EAAEJ,SAAS,EAAEE,UAAU,CAAC;EAC1D,MAAMG,UAAU,GAAGC,IAAI,CAACC,GAAG,CACzB,CAAC,CAAC,EAAEZ,OAAO,CAACa,gCAAgC,EAAER,SAAS,EAAEE,UAAU,CACrE,CAAC;EACDF,SAAS,GAAG,CAAC,CAAC,EAAEJ,OAAO,CAACa,eAAe,EAAET,SAAS,EAAEG,IAAI,GAAGE,UAAU,CAAC;;EAEtE;EACA;EACA;EACA,MAAMK,wBAAwB,GAAGC,MAAM,CACrC,CAAC,CAAC,EAAElB,MAAM,CAACW,UAAU,EAAEJ,SAAS,EAAEE,UAAU,CAAC,KAAK,CAACC,IACrD,CAAC;EACD,MAAMS,MAAM,GAAGT,IAAI,IAAIE,UAAU,GAAGK,wBAAwB,CAAC;EAC7D;EACA,OAAOE,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGA,MAAM;AAClC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}