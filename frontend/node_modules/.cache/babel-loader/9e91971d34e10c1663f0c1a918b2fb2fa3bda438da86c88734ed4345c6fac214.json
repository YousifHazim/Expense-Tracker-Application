{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport const useWindowSize = () => {\n  _s();\n  const [size, setSize] = useState([window.innerWidth, window.innerHeight]);\n  useEffect(() => {\n    const updateSize = () => {\n      setSize([window.innerWidth, window.innerHeight]);\n    };\n    window.addEventListener('resize', updateSize);\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return {\n    width: size[0],\n    height: size[1]\n  };\n};\n_s(useWindowSize, \"KD928l6WwZVqhph5sEOKFH76SRY=\");","map":{"version":3,"names":["useEffect","useState","useWindowSize","_s","size","setSize","window","innerWidth","innerHeight","updateSize","addEventListener","removeEventListener","width","height"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/src/utils/useWindowSize.js"],"sourcesContent":["import { useEffect,useState } from \"react\"\r\n\r\n\r\n\r\n\r\n\r\nexport const useWindowSize = () =>{\r\n    const [size, setSize] = useState([window.innerWidth, window.innerHeight])\r\n\r\n    useEffect(() => {\r\n        const updateSize = () => {\r\n            setSize([window.innerWidth, window.innerHeight])\r\n        }\r\n        window.addEventListener('resize', updateSize)\r\n\r\n        return () => window.removeEventListener('resize', updateSize)\r\n    }, [])\r\n\r\n    return {\r\n        width: size[0],\r\n        height: size[1]\r\n    }\r\n}"],"mappings":";AAAA,SAASA,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAM1C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,CAACK,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC,CAAC;EAEzER,SAAS,CAAC,MAAM;IACZ,MAAMS,UAAU,GAAGA,CAAA,KAAM;MACrBJ,OAAO,CAAC,CAACC,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC,CAAC;IACpD,CAAC;IACDF,MAAM,CAACI,gBAAgB,CAAC,QAAQ,EAAED,UAAU,CAAC;IAE7C,OAAO,MAAMH,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAEF,UAAU,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACHG,KAAK,EAAER,IAAI,CAAC,CAAC,CAAC;IACdS,MAAM,EAAET,IAAI,CAAC,CAAC;EAClB,CAAC;AACL,CAAC;AAAAD,EAAA,CAhBYD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}