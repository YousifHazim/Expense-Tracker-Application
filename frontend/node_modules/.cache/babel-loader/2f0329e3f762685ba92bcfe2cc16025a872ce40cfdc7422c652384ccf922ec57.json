{"ast":null,"code":"\"use strict\";\n\nexports.isDate = isDate; /**\r\n                         * @name isDate\r\n                         * @category Common Helpers\r\n                         * @summary Is the given value a date?\r\n                         *\r\n                         * @description\r\n                         * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\r\n                         *\r\n                         * @param value - The value to check\r\n                         *\r\n                         * @returns True if the given value is a date\r\n                         *\r\n                         * @example\r\n                         * // For a valid date:\r\n                         * const result = isDate(new Date())\r\n                         * //=> true\r\n                         *\r\n                         * @example\r\n                         * // For an invalid date:\r\n                         * const result = isDate(new Date(NaN))\r\n                         * //=> true\r\n                         *\r\n                         * @example\r\n                         * // For some value:\r\n                         * const result = isDate('2014-02-31')\r\n                         * //=> false\r\n                         *\r\n                         * @example\r\n                         * // For an object:\r\n                         * const result = isDate({})\r\n                         * //=> false\r\n                         */\nfunction isDate(value) {\n  return value instanceof Date || typeof value === \"object\" && Object.prototype.toString.call(value) === \"[object Date]\";\n}","map":{"version":3,"names":["exports","isDate","value","Date","Object","prototype","toString","call"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/isDate.js"],"sourcesContent":["\"use strict\";\r\nexports.isDate = isDate; /**\r\n * @name isDate\r\n * @category Common Helpers\r\n * @summary Is the given value a date?\r\n *\r\n * @description\r\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\r\n *\r\n * @param value - The value to check\r\n *\r\n * @returns True if the given value is a date\r\n *\r\n * @example\r\n * // For a valid date:\r\n * const result = isDate(new Date())\r\n * //=> true\r\n *\r\n * @example\r\n * // For an invalid date:\r\n * const result = isDate(new Date(NaN))\r\n * //=> true\r\n *\r\n * @example\r\n * // For some value:\r\n * const result = isDate('2014-02-31')\r\n * //=> false\r\n *\r\n * @example\r\n * // For an object:\r\n * const result = isDate({})\r\n * //=> false\r\n */\r\nfunction isDate(value) {\r\n  return (\r\n    value instanceof Date ||\r\n    (typeof value === \"object\" &&\r\n      Object.prototype.toString.call(value) === \"[object Date]\")\r\n  );\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,MAAM,GAAGA,MAAM,CAAC,CAAC;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAMA,CAACC,KAAK,EAAE;EACrB,OACEA,KAAK,YAAYC,IAAI,IACpB,OAAOD,KAAK,KAAK,QAAQ,IACxBE,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACL,KAAK,CAAC,KAAK,eAAgB;AAEhE","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}