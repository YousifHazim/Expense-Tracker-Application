{"ast":null,"code":"\"use strict\";\n\nexports.formatRelative = formatRelative;\nvar _index = require(\"./differenceInCalendarDays.js\");\nvar _index2 = require(\"./format.js\");\nvar _index3 = require(\"./toDate.js\");\nvar _index4 = require(\"./_lib/defaultLocale.js\");\nvar _index5 = require(\"./_lib/defaultOptions.js\");\n\n/**\r\n * The {@link formatRelative} function options.\r\n */\n\n/**\r\n * @name formatRelative\r\n * @category Common Helpers\r\n * @summary Represent the date in words relative to the given base date.\r\n *\r\n * @description\r\n * Represent the date in words relative to the given base date.\r\n *\r\n * | Distance to the base date | Result                    |\r\n * |---------------------------|---------------------------|\r\n * | Previous 6 days           | last Sunday at 04:30 AM   |\r\n * | Last day                  | yesterday at 04:30 AM     |\r\n * | Same day                  | today at 04:30 AM         |\r\n * | Next day                  | tomorrow at 04:30 AM      |\r\n * | Next 6 days               | Sunday at 04:30 AM        |\r\n * | Other                     | 12/31/2017                |\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to format\r\n * @param baseDate - The date to compare with\r\n * @param options - An object with options\r\n *\r\n * @returns The date in words\r\n *\r\n * @throws `date` must not be Invalid Date\r\n * @throws `baseDate` must not be Invalid Date\r\n * @throws `options.locale` must contain `localize` property\r\n * @throws `options.locale` must contain `formatLong` property\r\n * @throws `options.locale` must contain `formatRelative` property\r\n *\r\n * @example\r\n * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday\r\n * const result = formatRelative(subDays(new Date(), 6), new Date())\r\n * //=> \"last Thursday at 12:45 AM\"\r\n */\nfunction formatRelative(date, baseDate, options) {\n  const _date = (0, _index3.toDate)(date);\n  const _baseDate = (0, _index3.toDate)(baseDate);\n  const defaultOptions = (0, _index5.getDefaultOptions)();\n  const locale = options?.locale ?? defaultOptions.locale ?? _index4.defaultLocale;\n  const weekStartsOn = options?.weekStartsOn ?? options?.locale?.options?.weekStartsOn ?? defaultOptions.weekStartsOn ?? defaultOptions.locale?.options?.weekStartsOn ?? 0;\n  const diff = (0, _index.differenceInCalendarDays)(_date, _baseDate);\n  if (isNaN(diff)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n  let token;\n  if (diff < -6) {\n    token = \"other\";\n  } else if (diff < -1) {\n    token = \"lastWeek\";\n  } else if (diff < 0) {\n    token = \"yesterday\";\n  } else if (diff < 1) {\n    token = \"today\";\n  } else if (diff < 2) {\n    token = \"tomorrow\";\n  } else if (diff < 7) {\n    token = \"nextWeek\";\n  } else {\n    token = \"other\";\n  }\n  const formatStr = locale.formatRelative(token, _date, _baseDate, {\n    locale,\n    weekStartsOn\n  });\n  return (0, _index2.format)(_date, formatStr, {\n    locale,\n    weekStartsOn\n  });\n}","map":{"version":3,"names":["exports","formatRelative","_index","require","_index2","_index3","_index4","_index5","date","baseDate","options","_date","toDate","_baseDate","defaultOptions","getDefaultOptions","locale","defaultLocale","weekStartsOn","diff","differenceInCalendarDays","isNaN","RangeError","token","formatStr","format"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/formatRelative.js"],"sourcesContent":["\"use strict\";\r\nexports.formatRelative = formatRelative;\r\nvar _index = require(\"./differenceInCalendarDays.js\");\r\nvar _index2 = require(\"./format.js\");\r\n\r\nvar _index3 = require(\"./toDate.js\");\r\n\r\nvar _index4 = require(\"./_lib/defaultLocale.js\");\r\nvar _index5 = require(\"./_lib/defaultOptions.js\");\r\n\r\n/**\r\n * The {@link formatRelative} function options.\r\n */\r\n\r\n/**\r\n * @name formatRelative\r\n * @category Common Helpers\r\n * @summary Represent the date in words relative to the given base date.\r\n *\r\n * @description\r\n * Represent the date in words relative to the given base date.\r\n *\r\n * | Distance to the base date | Result                    |\r\n * |---------------------------|---------------------------|\r\n * | Previous 6 days           | last Sunday at 04:30 AM   |\r\n * | Last day                  | yesterday at 04:30 AM     |\r\n * | Same day                  | today at 04:30 AM         |\r\n * | Next day                  | tomorrow at 04:30 AM      |\r\n * | Next 6 days               | Sunday at 04:30 AM        |\r\n * | Other                     | 12/31/2017                |\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to format\r\n * @param baseDate - The date to compare with\r\n * @param options - An object with options\r\n *\r\n * @returns The date in words\r\n *\r\n * @throws `date` must not be Invalid Date\r\n * @throws `baseDate` must not be Invalid Date\r\n * @throws `options.locale` must contain `localize` property\r\n * @throws `options.locale` must contain `formatLong` property\r\n * @throws `options.locale` must contain `formatRelative` property\r\n *\r\n * @example\r\n * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday\r\n * const result = formatRelative(subDays(new Date(), 6), new Date())\r\n * //=> \"last Thursday at 12:45 AM\"\r\n */\r\nfunction formatRelative(date, baseDate, options) {\r\n  const _date = (0, _index3.toDate)(date);\r\n  const _baseDate = (0, _index3.toDate)(baseDate);\r\n\r\n  const defaultOptions = (0, _index5.getDefaultOptions)();\r\n  const locale =\r\n    options?.locale ?? defaultOptions.locale ?? _index4.defaultLocale;\r\n  const weekStartsOn =\r\n    options?.weekStartsOn ??\r\n    options?.locale?.options?.weekStartsOn ??\r\n    defaultOptions.weekStartsOn ??\r\n    defaultOptions.locale?.options?.weekStartsOn ??\r\n    0;\r\n\r\n  const diff = (0, _index.differenceInCalendarDays)(_date, _baseDate);\r\n\r\n  if (isNaN(diff)) {\r\n    throw new RangeError(\"Invalid time value\");\r\n  }\r\n\r\n  let token;\r\n  if (diff < -6) {\r\n    token = \"other\";\r\n  } else if (diff < -1) {\r\n    token = \"lastWeek\";\r\n  } else if (diff < 0) {\r\n    token = \"yesterday\";\r\n  } else if (diff < 1) {\r\n    token = \"today\";\r\n  } else if (diff < 2) {\r\n    token = \"tomorrow\";\r\n  } else if (diff < 7) {\r\n    token = \"nextWeek\";\r\n  } else {\r\n    token = \"other\";\r\n  }\r\n\r\n  const formatStr = locale.formatRelative(token, _date, _baseDate, {\r\n    locale,\r\n    weekStartsOn,\r\n  });\r\n  return (0, _index2.format)(_date, formatStr, { locale, weekStartsOn });\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,cAAc,GAAGA,cAAc;AACvC,IAAIC,MAAM,GAAGC,OAAO,CAAC,+BAA+B,CAAC;AACrD,IAAIC,OAAO,GAAGD,OAAO,CAAC,aAAa,CAAC;AAEpC,IAAIE,OAAO,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEpC,IAAIG,OAAO,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AAChD,IAAII,OAAO,GAAGJ,OAAO,CAAC,0BAA0B,CAAC;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,cAAcA,CAACO,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAE;EAC/C,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAEN,OAAO,CAACO,MAAM,EAAEJ,IAAI,CAAC;EACvC,MAAMK,SAAS,GAAG,CAAC,CAAC,EAAER,OAAO,CAACO,MAAM,EAAEH,QAAQ,CAAC;EAE/C,MAAMK,cAAc,GAAG,CAAC,CAAC,EAAEP,OAAO,CAACQ,iBAAiB,EAAE,CAAC;EACvD,MAAMC,MAAM,GACVN,OAAO,EAAEM,MAAM,IAAIF,cAAc,CAACE,MAAM,IAAIV,OAAO,CAACW,aAAa;EACnE,MAAMC,YAAY,GAChBR,OAAO,EAAEQ,YAAY,IACrBR,OAAO,EAAEM,MAAM,EAAEN,OAAO,EAAEQ,YAAY,IACtCJ,cAAc,CAACI,YAAY,IAC3BJ,cAAc,CAACE,MAAM,EAAEN,OAAO,EAAEQ,YAAY,IAC5C,CAAC;EAEH,MAAMC,IAAI,GAAG,CAAC,CAAC,EAAEjB,MAAM,CAACkB,wBAAwB,EAAET,KAAK,EAAEE,SAAS,CAAC;EAEnE,IAAIQ,KAAK,CAACF,IAAI,CAAC,EAAE;IACf,MAAM,IAAIG,UAAU,CAAC,oBAAoB,CAAC;EAC5C;EAEA,IAAIC,KAAK;EACT,IAAIJ,IAAI,GAAG,CAAC,CAAC,EAAE;IACbI,KAAK,GAAG,OAAO;EACjB,CAAC,MAAM,IAAIJ,IAAI,GAAG,CAAC,CAAC,EAAE;IACpBI,KAAK,GAAG,UAAU;EACpB,CAAC,MAAM,IAAIJ,IAAI,GAAG,CAAC,EAAE;IACnBI,KAAK,GAAG,WAAW;EACrB,CAAC,MAAM,IAAIJ,IAAI,GAAG,CAAC,EAAE;IACnBI,KAAK,GAAG,OAAO;EACjB,CAAC,MAAM,IAAIJ,IAAI,GAAG,CAAC,EAAE;IACnBI,KAAK,GAAG,UAAU;EACpB,CAAC,MAAM,IAAIJ,IAAI,GAAG,CAAC,EAAE;IACnBI,KAAK,GAAG,UAAU;EACpB,CAAC,MAAM;IACLA,KAAK,GAAG,OAAO;EACjB;EAEA,MAAMC,SAAS,GAAGR,MAAM,CAACf,cAAc,CAACsB,KAAK,EAAEZ,KAAK,EAAEE,SAAS,EAAE;IAC/DG,MAAM;IACNE;EACF,CAAC,CAAC;EACF,OAAO,CAAC,CAAC,EAAEd,OAAO,CAACqB,MAAM,EAAEd,KAAK,EAAEa,SAAS,EAAE;IAAER,MAAM;IAAEE;EAAa,CAAC,CAAC;AACxE","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}