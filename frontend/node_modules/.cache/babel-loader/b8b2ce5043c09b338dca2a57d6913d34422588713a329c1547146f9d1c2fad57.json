{"ast":null,"code":"\"use strict\";\n\nexports.endOfYesterday = endOfYesterday; /**\r\n                                         * @name endOfYesterday\r\n                                         * @category Day Helpers\r\n                                         * @summary Return the end of yesterday.\r\n                                         * @pure false\r\n                                         *\r\n                                         * @description\r\n                                         * Return the end of yesterday.\r\n                                         *\r\n                                         * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n                                         *\r\n                                         * @returns The end of yesterday\r\n                                         *\r\n                                         * @example\r\n                                         * // If today is 6 October 2014:\r\n                                         * const result = endOfYesterday()\r\n                                         * //=> Sun Oct 5 2014 23:59:59.999\r\n                                         */\nfunction endOfYesterday() {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = now.getMonth();\n  const day = now.getDate();\n  const date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","map":{"version":3,"names":["exports","endOfYesterday","now","Date","year","getFullYear","month","getMonth","day","getDate","date","setFullYear","setHours"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/endOfYesterday.js"],"sourcesContent":["\"use strict\";\r\nexports.endOfYesterday = endOfYesterday; /**\r\n * @name endOfYesterday\r\n * @category Day Helpers\r\n * @summary Return the end of yesterday.\r\n * @pure false\r\n *\r\n * @description\r\n * Return the end of yesterday.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @returns The end of yesterday\r\n *\r\n * @example\r\n * // If today is 6 October 2014:\r\n * const result = endOfYesterday()\r\n * //=> Sun Oct 5 2014 23:59:59.999\r\n */\r\nfunction endOfYesterday() {\r\n  const now = new Date();\r\n  const year = now.getFullYear();\r\n  const month = now.getMonth();\r\n  const day = now.getDate();\r\n\r\n  const date = new Date(0);\r\n  date.setFullYear(year, month, day - 1);\r\n  date.setHours(23, 59, 59, 999);\r\n  return date;\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,cAAc,GAAGA,cAAc,CAAC,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAcA,CAAA,EAAG;EACxB,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAMC,IAAI,GAAGF,GAAG,CAACG,WAAW,CAAC,CAAC;EAC9B,MAAMC,KAAK,GAAGJ,GAAG,CAACK,QAAQ,CAAC,CAAC;EAC5B,MAAMC,GAAG,GAAGN,GAAG,CAACO,OAAO,CAAC,CAAC;EAEzB,MAAMC,IAAI,GAAG,IAAIP,IAAI,CAAC,CAAC,CAAC;EACxBO,IAAI,CAACC,WAAW,CAACP,IAAI,EAAEE,KAAK,EAAEE,GAAG,GAAG,CAAC,CAAC;EACtCE,IAAI,CAACE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;EAC9B,OAAOF,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}