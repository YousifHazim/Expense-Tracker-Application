{"ast":null,"code":"\"use strict\";\n\nexports.isSameMinute = isSameMinute;\nvar _index = require(\"./startOfMinute.js\");\n\n/**\r\n * @name isSameMinute\r\n * @category Minute Helpers\r\n * @summary Are the given dates in the same minute (and hour and day)?\r\n *\r\n * @description\r\n * Are the given dates in the same minute (and hour and day)?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n *\r\n * @returns The dates are in the same minute (and hour and day)\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15 in the same minute?\r\n * const result = isSameMinute(\r\n *   new Date(2014, 8, 4, 6, 30),\r\n *   new Date(2014, 8, 4, 6, 30, 15)\r\n * )\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:30:00 and 5 September 2014 06:30:00 in the same minute?\r\n * const result = isSameMinute(\r\n *   new Date(2014, 8, 4, 6, 30),\r\n *   new Date(2014, 8, 5, 6, 30)\r\n * )\r\n * //=> false\r\n */\nfunction isSameMinute(dateLeft, dateRight) {\n  const dateLeftStartOfMinute = (0, _index.startOfMinute)(dateLeft);\n  const dateRightStartOfMinute = (0, _index.startOfMinute)(dateRight);\n  return +dateLeftStartOfMinute === +dateRightStartOfMinute;\n}","map":{"version":3,"names":["exports","isSameMinute","_index","require","dateLeft","dateRight","dateLeftStartOfMinute","startOfMinute","dateRightStartOfMinute"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/isSameMinute.js"],"sourcesContent":["\"use strict\";\r\nexports.isSameMinute = isSameMinute;\r\nvar _index = require(\"./startOfMinute.js\");\r\n\r\n/**\r\n * @name isSameMinute\r\n * @category Minute Helpers\r\n * @summary Are the given dates in the same minute (and hour and day)?\r\n *\r\n * @description\r\n * Are the given dates in the same minute (and hour and day)?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n *\r\n * @returns The dates are in the same minute (and hour and day)\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15 in the same minute?\r\n * const result = isSameMinute(\r\n *   new Date(2014, 8, 4, 6, 30),\r\n *   new Date(2014, 8, 4, 6, 30, 15)\r\n * )\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:30:00 and 5 September 2014 06:30:00 in the same minute?\r\n * const result = isSameMinute(\r\n *   new Date(2014, 8, 4, 6, 30),\r\n *   new Date(2014, 8, 5, 6, 30)\r\n * )\r\n * //=> false\r\n */\r\nfunction isSameMinute(dateLeft, dateRight) {\r\n  const dateLeftStartOfMinute = (0, _index.startOfMinute)(dateLeft);\r\n  const dateRightStartOfMinute = (0, _index.startOfMinute)(dateRight);\r\n\r\n  return +dateLeftStartOfMinute === +dateRightStartOfMinute;\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,YAAY,GAAGA,YAAY;AACnC,IAAIC,MAAM,GAAGC,OAAO,CAAC,oBAAoB,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,YAAYA,CAACG,QAAQ,EAAEC,SAAS,EAAE;EACzC,MAAMC,qBAAqB,GAAG,CAAC,CAAC,EAAEJ,MAAM,CAACK,aAAa,EAAEH,QAAQ,CAAC;EACjE,MAAMI,sBAAsB,GAAG,CAAC,CAAC,EAAEN,MAAM,CAACK,aAAa,EAAEF,SAAS,CAAC;EAEnE,OAAO,CAACC,qBAAqB,KAAK,CAACE,sBAAsB;AAC3D","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}