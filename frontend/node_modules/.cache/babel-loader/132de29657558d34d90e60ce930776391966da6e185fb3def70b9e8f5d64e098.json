{"ast":null,"code":"\"use strict\";\n\nexports.eachWeekendOfYear = eachWeekendOfYear;\nvar _index = require(\"./eachWeekendOfInterval.js\");\nvar _index2 = require(\"./endOfYear.js\");\nvar _index3 = require(\"./startOfYear.js\");\n\n/**\r\n * @name eachWeekendOfYear\r\n * @category Year Helpers\r\n * @summary List all the Saturdays and Sundays in the year.\r\n *\r\n * @description\r\n * Get all the Saturdays and Sundays in the year.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The given year\r\n *\r\n * @returns An array containing all the Saturdays and Sundays\r\n *\r\n * @example\r\n * // Lists all Saturdays and Sundays in the year\r\n * const result = eachWeekendOfYear(new Date(2020, 1, 1))\r\n * //=> [\r\n * //   Sat Jan 03 2020 00:00:00,\r\n * //   Sun Jan 04 2020 00:00:00,\r\n * //   ...\r\n * //   Sun Dec 27 2020 00:00:00\r\n * // ]\r\n * ]\r\n */\nfunction eachWeekendOfYear(date) {\n  const start = (0, _index3.startOfYear)(date);\n  const end = (0, _index2.endOfYear)(date);\n  return (0, _index.eachWeekendOfInterval)({\n    start,\n    end\n  });\n}","map":{"version":3,"names":["exports","eachWeekendOfYear","_index","require","_index2","_index3","date","start","startOfYear","end","endOfYear","eachWeekendOfInterval"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/eachWeekendOfYear.js"],"sourcesContent":["\"use strict\";\r\nexports.eachWeekendOfYear = eachWeekendOfYear;\r\nvar _index = require(\"./eachWeekendOfInterval.js\");\r\nvar _index2 = require(\"./endOfYear.js\");\r\nvar _index3 = require(\"./startOfYear.js\");\r\n\r\n/**\r\n * @name eachWeekendOfYear\r\n * @category Year Helpers\r\n * @summary List all the Saturdays and Sundays in the year.\r\n *\r\n * @description\r\n * Get all the Saturdays and Sundays in the year.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The given year\r\n *\r\n * @returns An array containing all the Saturdays and Sundays\r\n *\r\n * @example\r\n * // Lists all Saturdays and Sundays in the year\r\n * const result = eachWeekendOfYear(new Date(2020, 1, 1))\r\n * //=> [\r\n * //   Sat Jan 03 2020 00:00:00,\r\n * //   Sun Jan 04 2020 00:00:00,\r\n * //   ...\r\n * //   Sun Dec 27 2020 00:00:00\r\n * // ]\r\n * ]\r\n */\r\nfunction eachWeekendOfYear(date) {\r\n  const start = (0, _index3.startOfYear)(date);\r\n  const end = (0, _index2.endOfYear)(date);\r\n  return (0, _index.eachWeekendOfInterval)({ start, end });\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,iBAAiB,GAAGA,iBAAiB;AAC7C,IAAIC,MAAM,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AAClD,IAAIC,OAAO,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACvC,IAAIE,OAAO,GAAGF,OAAO,CAAC,kBAAkB,CAAC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,iBAAiBA,CAACK,IAAI,EAAE;EAC/B,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAEF,OAAO,CAACG,WAAW,EAAEF,IAAI,CAAC;EAC5C,MAAMG,GAAG,GAAG,CAAC,CAAC,EAAEL,OAAO,CAACM,SAAS,EAAEJ,IAAI,CAAC;EACxC,OAAO,CAAC,CAAC,EAAEJ,MAAM,CAACS,qBAAqB,EAAE;IAAEJ,KAAK;IAAEE;EAAI,CAAC,CAAC;AAC1D","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}