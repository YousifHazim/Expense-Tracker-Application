{"ast":null,"code":"\"use strict\";\n\nexports.isThisWeek = isThisWeek;\nvar _index = require(\"./constructNow.js\");\nvar _index2 = require(\"./isSameWeek.js\");\n\n/**\r\n * The {@link isThisWeek} function options.\r\n */\n\n/**\r\n * @name isThisWeek\r\n * @category Week Helpers\r\n * @summary Is the given date in the same week as the current date?\r\n * @pure false\r\n *\r\n * @description\r\n * Is the given date in the same week as the current date?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n * @param options - The object with options\r\n *\r\n * @returns The date is in this week\r\n *\r\n * @example\r\n * // If today is 25 September 2014, is 21 September 2014 in this week?\r\n * const result = isThisWeek(new Date(2014, 8, 21))\r\n * //=> true\r\n *\r\n * @example\r\n * // If today is 25 September 2014 and week starts with Monday\r\n * // is 21 September 2014 in this week?\r\n * const result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\r\n * //=> false\r\n */\nfunction isThisWeek(date, options) {\n  return (0, _index2.isSameWeek)(date, (0, _index.constructNow)(date), options);\n}","map":{"version":3,"names":["exports","isThisWeek","_index","require","_index2","date","options","isSameWeek","constructNow"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/isThisWeek.js"],"sourcesContent":["\"use strict\";\r\nexports.isThisWeek = isThisWeek;\r\nvar _index = require(\"./constructNow.js\");\r\nvar _index2 = require(\"./isSameWeek.js\");\r\n\r\n/**\r\n * The {@link isThisWeek} function options.\r\n */\r\n\r\n/**\r\n * @name isThisWeek\r\n * @category Week Helpers\r\n * @summary Is the given date in the same week as the current date?\r\n * @pure false\r\n *\r\n * @description\r\n * Is the given date in the same week as the current date?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n * @param options - The object with options\r\n *\r\n * @returns The date is in this week\r\n *\r\n * @example\r\n * // If today is 25 September 2014, is 21 September 2014 in this week?\r\n * const result = isThisWeek(new Date(2014, 8, 21))\r\n * //=> true\r\n *\r\n * @example\r\n * // If today is 25 September 2014 and week starts with Monday\r\n * // is 21 September 2014 in this week?\r\n * const result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\r\n * //=> false\r\n */\r\nfunction isThisWeek(date, options) {\r\n  return (0, _index2.isSameWeek)(date, (0, _index.constructNow)(date), options);\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,UAAU,GAAGA,UAAU;AAC/B,IAAIC,MAAM,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACzC,IAAIC,OAAO,GAAGD,OAAO,CAAC,iBAAiB,CAAC;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,UAAUA,CAACI,IAAI,EAAEC,OAAO,EAAE;EACjC,OAAO,CAAC,CAAC,EAAEF,OAAO,CAACG,UAAU,EAAEF,IAAI,EAAE,CAAC,CAAC,EAAEH,MAAM,CAACM,YAAY,EAAEH,IAAI,CAAC,EAAEC,OAAO,CAAC;AAC/E","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}