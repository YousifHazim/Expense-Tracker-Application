{"ast":null,"code":"\"use strict\";\n\nexports.isTomorrow = isTomorrow;\nvar _index = require(\"./addDays.js\");\nvar _index2 = require(\"./constructNow.js\");\nvar _index3 = require(\"./isSameDay.js\");\n\n/**\r\n * @name isTomorrow\r\n * @category Day Helpers\r\n * @summary Is the given date tomorrow?\r\n * @pure false\r\n *\r\n * @description\r\n * Is the given date tomorrow?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n *\r\n * @returns The date is tomorrow\r\n *\r\n * @example\r\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\r\n * const result = isTomorrow(new Date(2014, 9, 7, 14, 0))\r\n * //=> true\r\n */\nfunction isTomorrow(date) {\n  return (0, _index3.isSameDay)(date, (0, _index.addDays)((0, _index2.constructNow)(date), 1));\n}","map":{"version":3,"names":["exports","isTomorrow","_index","require","_index2","_index3","date","isSameDay","addDays","constructNow"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/isTomorrow.js"],"sourcesContent":["\"use strict\";\r\nexports.isTomorrow = isTomorrow;\r\nvar _index = require(\"./addDays.js\");\r\nvar _index2 = require(\"./constructNow.js\");\r\nvar _index3 = require(\"./isSameDay.js\");\r\n\r\n/**\r\n * @name isTomorrow\r\n * @category Day Helpers\r\n * @summary Is the given date tomorrow?\r\n * @pure false\r\n *\r\n * @description\r\n * Is the given date tomorrow?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n *\r\n * @returns The date is tomorrow\r\n *\r\n * @example\r\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\r\n * const result = isTomorrow(new Date(2014, 9, 7, 14, 0))\r\n * //=> true\r\n */\r\nfunction isTomorrow(date) {\r\n  return (0, _index3.isSameDay)(\r\n    date,\r\n    (0, _index.addDays)((0, _index2.constructNow)(date), 1),\r\n  );\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,UAAU,GAAGA,UAAU;AAC/B,IAAIC,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC;AACpC,IAAIC,OAAO,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAC1C,IAAIE,OAAO,GAAGF,OAAO,CAAC,gBAAgB,CAAC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,UAAUA,CAACK,IAAI,EAAE;EACxB,OAAO,CAAC,CAAC,EAAED,OAAO,CAACE,SAAS,EAC1BD,IAAI,EACJ,CAAC,CAAC,EAAEJ,MAAM,CAACM,OAAO,EAAE,CAAC,CAAC,EAAEJ,OAAO,CAACK,YAAY,EAAEH,IAAI,CAAC,EAAE,CAAC,CACxD,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}