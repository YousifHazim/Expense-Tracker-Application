{"ast":null,"code":"\"use strict\";\n\nexports.DayOfYearParser = void 0;\nvar _constants = require(\"../constants.js\");\nvar _Parser = require(\"../Parser.js\");\nvar _utils = require(\"../utils.js\");\nclass DayOfYearParser extends _Parser.Parser {\n  priority = 90;\n  subpriority = 1;\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return (0, _utils.parseNumericPattern)(_constants.numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, {\n          unit: \"date\"\n        });\n      default:\n        return (0, _utils.parseNDigits)(token.length, dateString);\n    }\n  }\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = (0, _utils.isLeapYearIndex)(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n  incompatibleTokens = [\"Y\", \"R\", \"q\", \"Q\", \"M\", \"L\", \"w\", \"I\", \"d\", \"E\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\nexports.DayOfYearParser = DayOfYearParser;","map":{"version":3,"names":["exports","DayOfYearParser","_constants","require","_Parser","_utils","Parser","priority","subpriority","parse","dateString","token","match","parseNumericPattern","numericPatterns","dayOfYear","ordinalNumber","unit","parseNDigits","length","validate","date","value","year","getFullYear","isLeapYear","isLeapYearIndex","set","_flags","setMonth","setHours","incompatibleTokens"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js"],"sourcesContent":["\"use strict\";\r\nexports.DayOfYearParser = void 0;\r\nvar _constants = require(\"../constants.js\");\r\nvar _Parser = require(\"../Parser.js\");\r\n\r\nvar _utils = require(\"../utils.js\");\r\n\r\nclass DayOfYearParser extends _Parser.Parser {\r\n  priority = 90;\r\n\r\n  subpriority = 1;\r\n\r\n  parse(dateString, token, match) {\r\n    switch (token) {\r\n      case \"D\":\r\n      case \"DD\":\r\n        return (0, _utils.parseNumericPattern)(\r\n          _constants.numericPatterns.dayOfYear,\r\n          dateString,\r\n        );\r\n      case \"Do\":\r\n        return match.ordinalNumber(dateString, { unit: \"date\" });\r\n      default:\r\n        return (0, _utils.parseNDigits)(token.length, dateString);\r\n    }\r\n  }\r\n\r\n  validate(date, value) {\r\n    const year = date.getFullYear();\r\n    const isLeapYear = (0, _utils.isLeapYearIndex)(year);\r\n    if (isLeapYear) {\r\n      return value >= 1 && value <= 366;\r\n    } else {\r\n      return value >= 1 && value <= 365;\r\n    }\r\n  }\r\n\r\n  set(date, _flags, value) {\r\n    date.setMonth(0, value);\r\n    date.setHours(0, 0, 0, 0);\r\n    return date;\r\n  }\r\n\r\n  incompatibleTokens = [\r\n    \"Y\",\r\n    \"R\",\r\n    \"q\",\r\n    \"Q\",\r\n    \"M\",\r\n    \"L\",\r\n    \"w\",\r\n    \"I\",\r\n    \"d\",\r\n    \"E\",\r\n    \"i\",\r\n    \"e\",\r\n    \"c\",\r\n    \"t\",\r\n    \"T\",\r\n  ];\r\n}\r\nexports.DayOfYearParser = DayOfYearParser;\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,eAAe,GAAG,KAAK,CAAC;AAChC,IAAIC,UAAU,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC3C,IAAIC,OAAO,GAAGD,OAAO,CAAC,cAAc,CAAC;AAErC,IAAIE,MAAM,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEnC,MAAMF,eAAe,SAASG,OAAO,CAACE,MAAM,CAAC;EAC3CC,QAAQ,GAAG,EAAE;EAEbC,WAAW,GAAG,CAAC;EAEfC,KAAKA,CAACC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC9B,QAAQD,KAAK;MACX,KAAK,GAAG;MACR,KAAK,IAAI;QACP,OAAO,CAAC,CAAC,EAAEN,MAAM,CAACQ,mBAAmB,EACnCX,UAAU,CAACY,eAAe,CAACC,SAAS,EACpCL,UACF,CAAC;MACH,KAAK,IAAI;QACP,OAAOE,KAAK,CAACI,aAAa,CAACN,UAAU,EAAE;UAAEO,IAAI,EAAE;QAAO,CAAC,CAAC;MAC1D;QACE,OAAO,CAAC,CAAC,EAAEZ,MAAM,CAACa,YAAY,EAAEP,KAAK,CAACQ,MAAM,EAAET,UAAU,CAAC;IAC7D;EACF;EAEAU,QAAQA,CAACC,IAAI,EAAEC,KAAK,EAAE;IACpB,MAAMC,IAAI,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC;IAC/B,MAAMC,UAAU,GAAG,CAAC,CAAC,EAAEpB,MAAM,CAACqB,eAAe,EAAEH,IAAI,CAAC;IACpD,IAAIE,UAAU,EAAE;MACd,OAAOH,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,GAAG;IACnC,CAAC,MAAM;MACL,OAAOA,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,GAAG;IACnC;EACF;EAEAK,GAAGA,CAACN,IAAI,EAAEO,MAAM,EAAEN,KAAK,EAAE;IACvBD,IAAI,CAACQ,QAAQ,CAAC,CAAC,EAAEP,KAAK,CAAC;IACvBD,IAAI,CAACS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACzB,OAAOT,IAAI;EACb;EAEAU,kBAAkB,GAAG,CACnB,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ;AACH;AACA/B,OAAO,CAACC,eAAe,GAAGA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}