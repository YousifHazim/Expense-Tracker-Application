{"ast":null,"code":"\"use strict\";\n\nexports.isSameHour = isSameHour;\nvar _index = require(\"./startOfHour.js\");\n\n/**\r\n * @name isSameHour\r\n * @category Hour Helpers\r\n * @summary Are the given dates in the same hour (and same day)?\r\n *\r\n * @description\r\n * Are the given dates in the same hour (and same day)?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n *\r\n * @returns The dates are in the same hour (and same day)\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\r\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:00 and 5 September 06:00:00 in the same hour?\r\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 5, 6, 0))\r\n * //=> false\r\n */\nfunction isSameHour(dateLeft, dateRight) {\n  const dateLeftStartOfHour = (0, _index.startOfHour)(dateLeft);\n  const dateRightStartOfHour = (0, _index.startOfHour)(dateRight);\n  return +dateLeftStartOfHour === +dateRightStartOfHour;\n}","map":{"version":3,"names":["exports","isSameHour","_index","require","dateLeft","dateRight","dateLeftStartOfHour","startOfHour","dateRightStartOfHour"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/isSameHour.js"],"sourcesContent":["\"use strict\";\r\nexports.isSameHour = isSameHour;\r\nvar _index = require(\"./startOfHour.js\");\r\n\r\n/**\r\n * @name isSameHour\r\n * @category Hour Helpers\r\n * @summary Are the given dates in the same hour (and same day)?\r\n *\r\n * @description\r\n * Are the given dates in the same hour (and same day)?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n *\r\n * @returns The dates are in the same hour (and same day)\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\r\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:00 and 5 September 06:00:00 in the same hour?\r\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 5, 6, 0))\r\n * //=> false\r\n */\r\nfunction isSameHour(dateLeft, dateRight) {\r\n  const dateLeftStartOfHour = (0, _index.startOfHour)(dateLeft);\r\n  const dateRightStartOfHour = (0, _index.startOfHour)(dateRight);\r\n\r\n  return +dateLeftStartOfHour === +dateRightStartOfHour;\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,UAAU,GAAGA,UAAU;AAC/B,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,UAAUA,CAACG,QAAQ,EAAEC,SAAS,EAAE;EACvC,MAAMC,mBAAmB,GAAG,CAAC,CAAC,EAAEJ,MAAM,CAACK,WAAW,EAAEH,QAAQ,CAAC;EAC7D,MAAMI,oBAAoB,GAAG,CAAC,CAAC,EAAEN,MAAM,CAACK,WAAW,EAAEF,SAAS,CAAC;EAE/D,OAAO,CAACC,mBAAmB,KAAK,CAACE,oBAAoB;AACvD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}