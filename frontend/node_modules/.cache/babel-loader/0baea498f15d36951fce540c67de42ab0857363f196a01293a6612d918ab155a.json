{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"C:/Users/mh_sm/Dropbox/PC/Desktop/computer/SENIOR-1/Spring/SW/Project/EXPENSE-TRACKER/frontend/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nexports.Hour0To11Parser = void 0;\nvar _constants = require(\"../constants.js\");\nvar _Parser = require(\"../Parser.js\");\nvar _utils = require(\"../utils.js\");\nclass Hour0To11Parser extends _Parser.Parser {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"priority\", 70);\n    _defineProperty(this, \"incompatibleTokens\", [\"h\", \"H\", \"k\", \"t\", \"T\"]);\n  }\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return (0, _utils.parseNumericPattern)(_constants.numericPatterns.hour11h, dateString);\n      case \"Ko\":\n        return match.ordinalNumber(dateString, {\n          unit: \"hour\"\n        });\n      default:\n        return (0, _utils.parseNDigits)(token.length, dateString);\n    }\n  }\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n}\nexports.Hour0To11Parser = Hour0To11Parser;","map":{"version":3,"names":["_defineProperty","require","default","exports","Hour0To11Parser","_constants","_Parser","_utils","Parser","constructor","arguments","parse","dateString","token","match","parseNumericPattern","numericPatterns","hour11h","ordinalNumber","unit","parseNDigits","length","validate","_date","value","set","date","_flags","isPM","getHours","setHours"],"sources":["C:/Users/mh_sm/Dropbox/PC/Desktop/computer/SENIOR-1/Spring/SW/Project/EXPENSE-TRACKER/frontend/node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.js"],"sourcesContent":["\"use strict\";\nexports.Hour0To11Parser = void 0;\nvar _constants = require(\"../constants.js\");\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nclass Hour0To11Parser extends _Parser.Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return (0, _utils.parseNumericPattern)(\n          _constants.numericPatterns.hour11h,\n          dateString,\n        );\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return (0, _utils.parseNDigits)(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\nexports.Hour0To11Parser = Hour0To11Parser;\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,eAAA,GAAAC,OAAA,yJAAAC,OAAA;AACbC,OAAO,CAACC,eAAe,GAAG,KAAK,CAAC;AAChC,IAAIC,UAAU,GAAGJ,OAAO,CAAC,iBAAiB,CAAC;AAC3C,IAAIK,OAAO,GAAGL,OAAO,CAAC,cAAc,CAAC;AAErC,IAAIM,MAAM,GAAGN,OAAO,CAAC,aAAa,CAAC;AAEnC,MAAMG,eAAe,SAASE,OAAO,CAACE,MAAM,CAAC;EAAAC,YAAA;IAAA,SAAAC,SAAA;IAAAV,eAAA,mBAChC,EAAE;IAAAA,eAAA,6BA8BQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAAA;EA5B9CW,KAAKA,CAACC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC9B,QAAQD,KAAK;MACX,KAAK,GAAG;QACN,OAAO,CAAC,CAAC,EAAEN,MAAM,CAACQ,mBAAmB,EACnCV,UAAU,CAACW,eAAe,CAACC,OAAO,EAClCL,UACF,CAAC;MACH,KAAK,IAAI;QACP,OAAOE,KAAK,CAACI,aAAa,CAACN,UAAU,EAAE;UAAEO,IAAI,EAAE;QAAO,CAAC,CAAC;MAC1D;QACE,OAAO,CAAC,CAAC,EAAEZ,MAAM,CAACa,YAAY,EAAEP,KAAK,CAACQ,MAAM,EAAET,UAAU,CAAC;IAC7D;EACF;EAEAU,QAAQA,CAACC,KAAK,EAAEC,KAAK,EAAE;IACrB,OAAOA,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,EAAE;EAClC;EAEAC,GAAGA,CAACC,IAAI,EAAEC,MAAM,EAAEH,KAAK,EAAE;IACvB,MAAMI,IAAI,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC,IAAI,EAAE;IAClC,IAAID,IAAI,IAAIJ,KAAK,GAAG,EAAE,EAAE;MACtBE,IAAI,CAACI,QAAQ,CAACN,KAAK,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACpC,CAAC,MAAM;MACLE,IAAI,CAACI,QAAQ,CAACN,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/B;IACA,OAAOE,IAAI;EACb;AAGF;AACAvB,OAAO,CAACC,eAAe,GAAGA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}