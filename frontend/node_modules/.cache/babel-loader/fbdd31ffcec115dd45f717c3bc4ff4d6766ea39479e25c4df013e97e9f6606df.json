{"ast":null,"code":"\"use strict\";\n\nexports.milliseconds = milliseconds;\nvar _index = require(\"./constants.js\");\n\n/**\r\n * @name milliseconds\r\n * @category Millisecond Helpers\r\n * @summary\r\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\r\n *\r\n * @description\r\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\r\n *\r\n * One years equals 365.2425 days according to the formula:\r\n *\r\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\r\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\r\n *\r\n * One month is a year divided by 12.\r\n *\r\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be added.\r\n *\r\n * @returns The milliseconds\r\n *\r\n * @example\r\n * // 1 year in milliseconds\r\n * milliseconds({ years: 1 })\r\n * //=> 31556952000\r\n *\r\n * // 3 months in milliseconds\r\n * milliseconds({ months: 3 })\r\n * //=> 7889238000\r\n */\nfunction milliseconds({\n  years,\n  months,\n  weeks,\n  days,\n  hours,\n  minutes,\n  seconds\n}) {\n  let totalDays = 0;\n  if (years) totalDays += years * _index.daysInYear;\n  if (months) totalDays += months * (_index.daysInYear / 12);\n  if (weeks) totalDays += weeks * 7;\n  if (days) totalDays += days;\n  let totalSeconds = totalDays * 24 * 60 * 60;\n  if (hours) totalSeconds += hours * 60 * 60;\n  if (minutes) totalSeconds += minutes * 60;\n  if (seconds) totalSeconds += seconds;\n  return Math.trunc(totalSeconds * 1000);\n}","map":{"version":3,"names":["exports","milliseconds","_index","require","years","months","weeks","days","hours","minutes","seconds","totalDays","daysInYear","totalSeconds","Math","trunc"],"sources":["D:/Faculty/Spring 2024/SW engineering/project/Expense-Tracker-Application/frontend/node_modules/date-fns/milliseconds.js"],"sourcesContent":["\"use strict\";\r\nexports.milliseconds = milliseconds;\r\nvar _index = require(\"./constants.js\");\r\n\r\n/**\r\n * @name milliseconds\r\n * @category Millisecond Helpers\r\n * @summary\r\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\r\n *\r\n * @description\r\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\r\n *\r\n * One years equals 365.2425 days according to the formula:\r\n *\r\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\r\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\r\n *\r\n * One month is a year divided by 12.\r\n *\r\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be added.\r\n *\r\n * @returns The milliseconds\r\n *\r\n * @example\r\n * // 1 year in milliseconds\r\n * milliseconds({ years: 1 })\r\n * //=> 31556952000\r\n *\r\n * // 3 months in milliseconds\r\n * milliseconds({ months: 3 })\r\n * //=> 7889238000\r\n */\r\nfunction milliseconds({ years, months, weeks, days, hours, minutes, seconds }) {\r\n  let totalDays = 0;\r\n\r\n  if (years) totalDays += years * _index.daysInYear;\r\n  if (months) totalDays += months * (_index.daysInYear / 12);\r\n  if (weeks) totalDays += weeks * 7;\r\n  if (days) totalDays += days;\r\n\r\n  let totalSeconds = totalDays * 24 * 60 * 60;\r\n\r\n  if (hours) totalSeconds += hours * 60 * 60;\r\n  if (minutes) totalSeconds += minutes * 60;\r\n  if (seconds) totalSeconds += seconds;\r\n\r\n  return Math.trunc(totalSeconds * 1000);\r\n}\r\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,YAAY,GAAGA,YAAY;AACnC,IAAIC,MAAM,GAAGC,OAAO,CAAC,gBAAgB,CAAC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,YAAYA,CAAC;EAAEG,KAAK;EAAEC,MAAM;EAAEC,KAAK;EAAEC,IAAI;EAAEC,KAAK;EAAEC,OAAO;EAAEC;AAAQ,CAAC,EAAE;EAC7E,IAAIC,SAAS,GAAG,CAAC;EAEjB,IAAIP,KAAK,EAAEO,SAAS,IAAIP,KAAK,GAAGF,MAAM,CAACU,UAAU;EACjD,IAAIP,MAAM,EAAEM,SAAS,IAAIN,MAAM,IAAIH,MAAM,CAACU,UAAU,GAAG,EAAE,CAAC;EAC1D,IAAIN,KAAK,EAAEK,SAAS,IAAIL,KAAK,GAAG,CAAC;EACjC,IAAIC,IAAI,EAAEI,SAAS,IAAIJ,IAAI;EAE3B,IAAIM,YAAY,GAAGF,SAAS,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;EAE3C,IAAIH,KAAK,EAAEK,YAAY,IAAIL,KAAK,GAAG,EAAE,GAAG,EAAE;EAC1C,IAAIC,OAAO,EAAEI,YAAY,IAAIJ,OAAO,GAAG,EAAE;EACzC,IAAIC,OAAO,EAAEG,YAAY,IAAIH,OAAO;EAEpC,OAAOI,IAAI,CAACC,KAAK,CAACF,YAAY,GAAG,IAAI,CAAC;AACxC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}